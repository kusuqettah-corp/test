[/
 / Copyright (c) 2015 Boost.Test team 
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]


[section:acceptable_statements Acceptable statements]



* `statement` above may be almost anything: in particular it might contain a full expression composed by several operations,
* `statement` is cast to a `bool`, as if it would appear as argument to an `if` statement: this is the result of the assertion,
* `optional_modifiers` may be: 
  * a [link boost_test.testing_tools.reports custom message] printed in case of failure
  * additional control over how comparisons are performed (floating point, collections, type of report)

`BOOST_TEST` assertion uses operator overloading in order to provide an enhanced reporting capability, as
shown on the example below:

[bt_example boost_test_macro3..BOOST_TEST enhanced reporting]

As it can be seen, additional details are provided in log. This is possible for almost all overloadable operators in C++:
  
[table
  [[Class of operation][operators]]
  [[binary comparisons][`==`, `!=`, `<`, `>`, `<=`, `>=`]]
  [[arithmetic compositions][`+`, `-`, `*`, `/`, `%`]]
  [[bitwise compositions][`|`, `&`, `^`, `<<`, `>>`]]
  [[assignments][`=`, `+=`, `-=`, `*=`, `/=`, `%=`, `<<=`, `>>=`, `&=`, `^=`, `|=`]]
]  


There are a few constructions that are however unsupported, but adding an extra bracket usually solves that:

* statements containing ternary conditions: those statement should be surrounded by parenthesis as they cannot be overloaded
* statements containing commas: those statements will be intercepted by the preprocessor
* compound statements containing any logical composition `||`, `&&`. Those are disabled intentionally and should be surrounded
  by parenthesis
  
    BOOST_TEST((true || false));
    
  The full details are given in [link boost_test.testing_tools.internal_details this section].

[bt_example boost_test_macro1..BOOST_TEST acceptable expressions]





[endsect]
