[/
 / Copyright (c) 2015 Andrzej Krzemienski
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[section:shared_lib_customizations Shared-library variant customizations] 

[section:entry_point Customizing the module's entry point]

In this variant, in one of the source files, you now have to define your custom entry point, and invoke the default [link boost_test.adv_scenarios.test_module_runner_overview test runner] `unit_test_main` manually with the default [link boost_test.adv_scenarios.test_module_init_overview initialization function] `init_unit_test` as argument. You need to define __BOOST_TEST_NO_MAIN__ (its value is irrelevant) in the main file:

[table
[[In *exactly one* file][In all other files]]
[[```#define BOOST_TEST_MODULE test module name
#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_NO_MAIN
#include <boost/test/unit_test.hpp>

// entry point:
int main(int argc, char* argv[], char* envp[])
{
  return utf::unit_test_main(init_unit_test, argc, argv);
}
```]
[```#define BOOST_TEST_DYN_LINK
#include <boost/test/unit_test.hpp>

//
// test cases
//
```]]
]

[endsect] [/section:entry_point]

[endsect] [/section:shared_lib_customizations]
