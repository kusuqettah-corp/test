[section:dynamic_lib_variant The dynamic library variant of the __UTF__]

In the project with large number of test modules [link static_lib_variant the static library variant] of the __UTF__ may cause you to waste a lot of disk space,
since the __UTF__ is linked statically with every test module. The solution is to link with the __UTF__ built into a dynamic library. If you opt
to link a test module with the prebuilt dynamic library, this usage is called the dynamic library variant of the
__UTF__. This variant requires you to define the flag `__BOOST_TEST_DYN_LINK__`
either in a makefile or before the header `boost/test/unit_test.hpp` inclusion.

The test runner supplied with this variant requires you to implement the [link ref_test_module test module]
initialization function that matches the alternative initialization function signature. The __UTF__
provides an ability to [*automatically generate] [/ <link linkend="utf.user-guide.initialization.auto-generation">]
an empty test module initialization function with correct signature if no custom initialization is required by a
test module.

[note The name of the test module initialization function is not enforced, since the function is passed as an argument to the test runner.
]

[endsect] [/ section:dynamic_lib_variant]
