[#static_lib_variant]
[section:static_lib_variant The static library variant of the __UTF__]
The __UTF__ can be built into a static library. If you opt to link a test module with the [*standalone static library], [/ <link linkend="utf.compilation.standalone">]
this usage is called the static library variant of the __UTF__.

The test runner supplied with this variant required you to implement the [*test module] [/ <link linkend="test-module.def">]
initialization function that matches one of the two specifications depending on the compilation flag
__BOOST_TEST_ALTERNATIVE_INIT_API__. If flag isn't defined you are required
to match the original specification. If you define the flag __BOOST_TEST_ALTERNATIVE_INIT_API__ during a test module compilation you 
are required to use the alternative initialization function specification. The __UTF__ provides an ability to
[*automatically generate] an empty test module  [/ <link linkend="utf.user-guide.initialization.auto-generation">]
initialization function with correct specification if no custom initialization is required by a test module.


If you opted to use an alternative initialization API, for a test module to be able to link with prebuilt library, 
the flag `__BOOST_TEST_ALTERNATIVE_INIT_API__` has to be defined both during library and a test module compilation.

[endsect] [/ section:static_lib_variant]